version: '3.9'

services:
  postgres:
    image: postgres:14.17
    container_name: postgres-db-microservices
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-microservices
    ports:
      - "5672:5672"    # Puerto para aplicaciones (conexión amqp)
      - "15672:15672"  # Puerto para la consola de administración
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend 

  order-service:
    build: ./order-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/restaurante
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      RABBITMQ_SP_HOST: ${RABBITMQ_HOST}
      RABBITMQ_SP_PORT: ${RABBITMQ_PORT}
      RABBITMQ_SP_USER: ${RABBITMQ_USER}
      RABBITMQ_SP_PASSWORD: ${RABBITMQ_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - backend

  inventory-service:
    build: ./inventory-service
    env_file:
      - ./inventory-service/.env
    environment:
      DB_HOST: postgres
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_DATABASE}
      RABBITMQ_HOST: ${RABBITMQ_HOST} 
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend: